{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./board.js","webpack:///./constants.js","webpack:///./main.js","webpack:///./piece.js"],"names":["Board","ctx","ctxNext","init","canvas","width","COLS","BLOCK_SIZE","height","ROWS","scale","grid","getEmptyGrid","piece","Piece","setStartingPosition","getNewPiece","Array","from","length","fill","next","clearRect","draw","p","shape","every","row","dy","value","dx","x","y","insideWalls","aboveFloor","notOccupied","direction","JSON","parse","stringify","forEach","reverse","drawBoard","console","log","table","fillStyle","COLORS","fillRect","moves","KEY","DOWN","valid","move","freeze","clearLines","lines","splice","unshift","account","score","getLinesClearedPoints","LINES_PER_LEVEL","level","time","LEVEL","lineClearPoints","POINTS","SINGLE","DOUBLE","TRIPLE","TETRIS","ESC","SPACE","LEFT","UP","RIGHT","P","Q","Object","SHAPES","SOFT_DROP","HARD_DROP","document","getElementById","getContext","canvasNext","initNext","board","requestId","accountValues","Proxy","set","target","key","updateAccount","element","textContent","play","resetGame","animate","window","reset","start","elapsed","now","drop","gameOver","requestAnimationFrame","cancelAnimationFrame","font","fillText","rotate","addEventListener","e","keyCode","preventDefault","event","spawn","typeId","randomizeTetrominoType","color","noOfTypes","Math","floor","random"],"mappings":"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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./main.js\");\n","/* for board logic. */\r\nimport Piece from './piece';\r\nimport { COLS, ROWS, BLOCK_SIZE, LINES_PER_LEVEL, KEY, COLORS, POINTS, LEVEL } from './constants';\r\nimport { moves, account, time } from './main';\r\nexport default class Board {\r\n  ctx; // 게임 진행 중인 html dom의 canvas 렌더링 컨텍스트\r\n  ctxNext; // 다음 블럭 보여줄 html dom의 canvas 렌더링 컨텍스트\r\n  grid; // ROWS * COLS 의 2차원 배열\r\n  piece; // 현재 블럭(piece)\r\n  next; // 다음 블럭(piece)\r\n\r\n  /* initialize */\r\n  constructor(ctx, ctxNext) {\r\n    this.ctx = ctx;\r\n    this.ctxNext = ctxNext;\r\n    this.init();\r\n  }\r\n  init() {\r\n    // 상수를 사용하여 캔버스 사이즈를 계산한다.\r\n    this.ctx.canvas.width = COLS * BLOCK_SIZE;\r\n    this.ctx.canvas.height = ROWS * BLOCK_SIZE;\r\n\r\n    // scale은 x,y축으로 N배만큼 확대함. (좌표/길이/선두께 포함)\r\n    this.ctx.scale(BLOCK_SIZE, BLOCK_SIZE);\r\n  }\r\n  reset() {\r\n    // 게임 시작전 보드 초기화\r\n    this.grid = this.getEmptyGrid();\r\n    this.piece = new Piece(this.ctx);\r\n    this.piece.setStartingPosition();\r\n    this.getNewPiece();\r\n  }\r\n\r\n  getEmptyGrid() {\r\n    // ROWS * COLS 의 2차원 배열 생성됨.\r\n    // from 이 {length: N}을 넣으면, 길이가 N인 배열을 생성해주고,\r\n    // callback의 return 값을 배열의 각 원소로 초기화해줌.\r\n    return Array.from({ length: ROWS }, () => Array(COLS).fill(0));\r\n  }\r\n\r\n  getNewPiece() {\r\n    this.next = new Piece(this.ctxNext);\r\n    this.ctxNext.clearRect(0, 0, this.ctxNext.canvas.width, this.ctxNext.canvas.height);\r\n    this.next.draw();\r\n  }\r\n\r\n  /* true: 벽에 안부딪힘 / false: 벽에 부딪힘 */\r\n  valid(p) {\r\n    return p.shape.every((row, dy) => {\r\n      return row.every((value, dx) => {\r\n        let x = p.x + dx;\r\n        let y = p.y + dy;\r\n        return value === 0 || (this.insideWalls(x) && this.aboveFloor(y) && this.notOccupied(x, y));\r\n      });\r\n    });\r\n  }\r\n  insideWalls(x) {\r\n    return x >= 0 && x < COLS;\r\n  }\r\n  aboveFloor(y) {\r\n    return y <= ROWS;\r\n  }\r\n  notOccupied(x, y) {\r\n    return this.grid[y] && this.grid[y][x] === 0;\r\n  }\r\n\r\n  /* rotate */\r\n  rotate(piece, direction) {\r\n    // Clone with JSON for immutability.\r\n    // spread 연산자로 하면 1 level 밖에 못하니까 아래처럼 함.\r\n    let p = JSON.parse(JSON.stringify(piece));\r\n    // Transpose matrix\r\n    for (let y = 0; y < p.shape.length; ++y) {\r\n      for (let x = 0; x < y; ++x) {\r\n        [p.shape[x][y], p.shape[y][x]] = [p.shape[y][x], p.shape[x][y]];\r\n      }\r\n    }\r\n    p.shape.forEach((row) => row.reverse());\r\n\r\n    return p;\r\n  }\r\n\r\n  /* draw piece & grid */\r\n  draw() {\r\n    this.piece.draw(); // ctx 위에 현재 블록을 그림\r\n    this.drawBoard(); // ctx 위에 현재 블록 전까지 쌓인 블록을 그림\r\n  }\r\n  drawBoard() {\r\n    console.log('----board----');\r\n    console.table(this.grid);\r\n    console.log('----board----');\r\n    this.grid.forEach((row, y) => {\r\n      row.forEach((value, x) => {\r\n        if (value > 0) {\r\n          // freeze() 함수를 통해 grid에 블록이 고정된 경우에만 이 조건실행문에 들어옴.\r\n          this.ctx.fillStyle = COLORS[value];\r\n          this.ctx.fillRect(x, y, 1, 1);\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  /* 자동으로 떨어지는 동작용 함수 */\r\n  /*  \r\n    timer로 계속 떨어지도록 하고 있기 때문에,\r\n    사용자가 방향키로 조작을 하더라도 계속 이 함수가 호출될 수 밖에 없음. \r\n    그래서 사용자가 빠르게 아래키를 눌러서 땅에 닿아도, \r\n    이 함수가 호출되기 전까지는 점수가 추가될 수 없음. (즉, 라인이 지워질 수 없음.)\r\n   */\r\n  drop() {\r\n    let p = moves[KEY.DOWN](this.piece);\r\n    if (this.valid(p)) {\r\n      // 땅에 안부딪힘\r\n      this.piece.move(p);\r\n    } else {\r\n      // 땅에 부딪힘\r\n      this.freeze();\r\n      this.clearLines();\r\n      if (this.piece.y === 0) {\r\n        // 블록이 젤 꼭대기에 닿았을 때\r\n        // Game over\r\n        return false;\r\n      }\r\n      this.piece = this.next; // 새 블록 추가\r\n      this.piece.ctx = this.ctx; // 이전 블록이 추가된 grid가 그려진 ctx\r\n      this.piece.setStartingPosition();\r\n      this.getNewPiece(); // 다음에 나올 블록을 미리 세팅\r\n    }\r\n    return true;\r\n  }\r\n  freeze() {\r\n    // 블록이 쌓인 경우, 쌓인 블록을 ctx에 고정으로 draw함.\r\n    this.piece.shape.forEach((row, y) => {\r\n      row.forEach((value, x) => {\r\n        if (value > 0) {\r\n          this.grid[y + this.piece.y][x + this.piece.x] = value;\r\n        }\r\n      });\r\n    });\r\n  }\r\n  clearLines() {\r\n    let lines = 0;\r\n\r\n    this.grid.forEach((row, y) => {\r\n      // If every value is greater than 0.\r\n      if (row.every((value) => value > 0)) {\r\n        lines++;\r\n\r\n        // Remove the row.\r\n        this.grid.splice(y, 1);\r\n\r\n        // Add zero filled row at the top.\r\n        this.grid.unshift(Array(COLS).fill(0));\r\n      }\r\n    });\r\n\r\n    if (lines > 0) {\r\n      // Calculate points from cleared lines and level.\r\n      account.score += this.getLinesClearedPoints(lines);\r\n      account.lines += lines;\r\n      // If we have reached the lines for next level\r\n      if (account.lines >= LINES_PER_LEVEL) {\r\n        // Goto next level\r\n        account.level++;\r\n        // Remove lines so we start working for the next level\r\n        account.lines -= LINES_PER_LEVEL;\r\n        // Increase speed of game\r\n        time.level = LEVEL[account.level];\r\n      }\r\n    }\r\n  }\r\n  getLinesClearedPoints(lines, level) {\r\n    const lineClearPoints = lines === 1 ? POINTS.SINGLE : lines === 2 ? POINTS.DOUBLE : lines === 3 ? POINTS.TRIPLE : lines === 4 ? POINTS.TETRIS : 0;\r\n    return (account.level + 1) * lineClearPoints;\r\n  }\r\n}\r\n","/* where we put the configurations and rules of the game. */\r\nexport const COLS = 10;\r\nexport const ROWS = 20;\r\nexport const BLOCK_SIZE = 30;\r\nexport const LINES_PER_LEVEL = 10;\r\nexport const KEY = {\r\n  // 각 숫자는 keydown이벤트의 keycode 값\r\n  ESC: 27,\r\n  SPACE: 32,\r\n  LEFT: 37,\r\n  UP: 38,\r\n  RIGHT: 39,\r\n  DOWN: 40,\r\n  P: 80,\r\n  Q: 81,\r\n};\r\nObject.freeze(KEY);\r\n\r\nexport const COLORS = ['none', 'cyan', 'blue', 'orange', 'yellow', 'green', 'purple', 'red'];\r\nObject.freeze(COLORS);\r\n\r\nexport const SHAPES = [\r\n  [],\r\n  [\r\n    [0, 0, 0, 0],\r\n    [1, 1, 1, 1],\r\n    [0, 0, 0, 0],\r\n    [0, 0, 0, 0],\r\n  ],\r\n  [\r\n    [2, 0, 0],\r\n    [2, 2, 2],\r\n    [0, 0, 0],\r\n  ],\r\n  [\r\n    [0, 0, 3], // 0,0 -> 2,0 ; 0,1 -> 1,0 ; 0,2 -> 0,0\r\n    [3, 3, 3], // 1,0 -> 2,1 ; 1,1 -> 1,1 ; 1,2 -> 0,1\r\n    [0, 0, 0],\r\n  ], // 2,0 -> 2,2 ; 2,1 -> 1,2 ; 2,2 -> 0,2\r\n  [\r\n    [4, 4],\r\n    [4, 4],\r\n  ],\r\n  [\r\n    [0, 5, 5],\r\n    [5, 5, 0],\r\n    [0, 0, 0],\r\n  ],\r\n  [\r\n    [0, 6, 0],\r\n    [6, 6, 6],\r\n    [0, 0, 0],\r\n  ],\r\n  [\r\n    [7, 7, 0],\r\n    [0, 7, 7],\r\n    [0, 0, 0],\r\n  ],\r\n];\r\nObject.freeze(SHAPES);\r\n\r\nexport const POINTS = {\r\n  SINGLE: 100,\r\n  DOUBLE: 300,\r\n  TRIPLE: 500,\r\n  TETRIS: 800,\r\n  SOFT_DROP: 1,\r\n  HARD_DROP: 2,\r\n};\r\nObject.freeze(POINTS);\r\n\r\nexport const LEVEL = {\r\n  0: 800,\r\n  1: 720,\r\n  2: 630,\r\n  3: 550,\r\n  4: 470,\r\n  5: 380,\r\n  6: 300,\r\n  7: 220,\r\n  8: 130,\r\n  9: 100,\r\n  10: 80,\r\n  11: 80,\r\n  12: 80,\r\n  13: 70,\r\n  14: 70,\r\n  15: 70,\r\n  16: 50,\r\n  17: 50,\r\n  18: 50,\r\n  19: 30,\r\n  20: 30,\r\n  // 29+ is 20ms\r\n};\r\nObject.freeze(LEVEL);\r\n","/* code to initialize the game and the overall game logic. */\r\nimport Board from './board.js';\r\nimport { BLOCK_SIZE, POINTS, KEY, LEVEL } from './constants';\r\nconst canvas = document.getElementById('board');\r\nconst ctx = canvas.getContext('2d');\r\nconst canvasNext = document.getElementById('next');\r\nconst ctxNext = canvasNext.getContext('2d');\r\n\r\n/* initialize */\r\nfunction initNext() {\r\n  // Calculate size of canvas from constants.\r\n  ctxNext.canvas.width = 4 * BLOCK_SIZE;\r\n  ctxNext.canvas.height = 4 * BLOCK_SIZE;\r\n  ctxNext.scale(BLOCK_SIZE / 2, BLOCK_SIZE / 2);\r\n  // 샘플코드는 /2 를 안해도 잘 되는데 왜 나는 /2를 해야하는지 모르겠음.\r\n}\r\ninitNext();\r\n\r\n/* declare */\r\nlet board = new Board(ctx, ctxNext);\r\nlet requestId;\r\nexport let time;\r\n\r\n// account (score/level/deleted lines)\r\nlet accountValues = {\r\n  score: 0,\r\n  level: 0,\r\n  lines: 0,\r\n};\r\nexport let account = new Proxy(accountValues, {\r\n  set: (target, key, value) => {\r\n    target[key] = value;\r\n    updateAccount(key, value);\r\n    return true;\r\n  },\r\n});\r\nfunction updateAccount(key, value) {\r\n  let element = document.getElementById(key);\r\n  if (element) {\r\n    element.textContent = value; // 점수 누적\r\n  }\r\n}\r\n\r\n/* play game */\r\nfunction play() {\r\n  resetGame();\r\n  animate();\r\n}\r\nwindow.play = play;\r\n\r\nfunction resetGame() {\r\n  account.score = 0;\r\n  account.lines = 0;\r\n  account.level = 0;\r\n  board.reset();\r\n  time = { start: 0, elapsed: 0, level: LEVEL[account.level] };\r\n}\r\n\r\nfunction animate(now = 0) {\r\n  time.elapsed = now - time.start;\r\n  if (time.elapsed > time.level) {\r\n    time.start = now;\r\n    if (!board.drop()) {\r\n      gameOver();\r\n      return;\r\n    }\r\n  }\r\n\r\n  // Clear board before drawing new state.\r\n  ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\r\n\r\n  board.draw();\r\n  requestId = requestAnimationFrame(animate);\r\n}\r\n\r\nfunction gameOver() {\r\n  cancelAnimationFrame(requestId);\r\n  ctx.fillStyle = 'black';\r\n  ctx.fillRect(1, 3, 8, 1.2);\r\n  ctx.font = '1px Arial';\r\n  ctx.fillStyle = 'red';\r\n  ctx.fillText('GAME OVER', 1.8, 4);\r\n}\r\n\r\n/* control */\r\nexport const moves = {\r\n  // p : piece 클래스 인스턴스\r\n  // p.x, p.y : block의 x,y축 좌표\r\n  [KEY.LEFT]: (p) => ({ ...p, x: p.x - 1 }),\r\n  [KEY.RIGHT]: (p) => ({ ...p, x: p.x + 1 }),\r\n  [KEY.DOWN]: (p) => ({ ...p, y: p.y + 1 }),\r\n  [KEY.SPACE]: (p) => ({ ...p, y: p.y + 1 }),\r\n  [KEY.UP]: (p) => board.rotate(p),\r\n};\r\n\r\ndocument.addEventListener('keydown', (e) => {\r\n  if (moves[e.keyCode]) {\r\n    e.preventDefault(); // stop event bubbling\r\n    let p = moves[e.keyCode](board.piece);\r\n\r\n    // board.valid(p): true-벽에 안부딪힘 / false-벽에 부딪힘\r\n    if (e.keyCode === KEY.SPACE) {\r\n      while (board.valid(p)) {\r\n        // hard drop\r\n        account.score += POINTS.HARD_DROP;\r\n        board.piece.move(p);\r\n        p = moves[KEY.DOWN](board.piece);\r\n        // p가 while 조건문에 쓰이는걸 모르고 이 라인을 지웠다가 크롬 터짐\r\n        // 왜냐면 DOWN을 통한 y+1 을 반복하지않으면, while문에 무한루프가 걸림\r\n        // (y+1을 반복해야 바닥까지 닿아서 while문을 탈출할 수 있음)\r\n      }\r\n    } else if (board.valid(p)) {\r\n      // 스페이스를 누르지 않은 경우\r\n      board.piece.move(p);\r\n      if (event.keyCode === KEY.DOWN) {\r\n        account.score += POINTS.SOFT_DROP;\r\n      }\r\n    }\r\n\r\n    ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height); // 보드판 초기화\r\n    board.piece.draw();\r\n  }\r\n});\r\n","import { COLORS, SHAPES } from './constants';\r\n/* for piece logic. */\r\nexport default class Piece {\r\n  /* \r\n  x : grid에서의 x 좌표\r\n  y : grid에서의 y 좌표\r\n  color : block 색\r\n  shape : block 을 행렬로 표현한 2차원 배열\r\n  ctx : canvas 객체\r\n  */\r\n  x;\r\n  y;\r\n  color;\r\n  shape;\r\n  ctx;\r\n  typeId;\r\n  constructor(ctx) {\r\n    this.ctx = ctx;\r\n    this.spawn();\r\n  }\r\n  spawn() {\r\n    this.typeId = this.randomizeTetrominoType(COLORS.length - 1);\r\n    this.shape = SHAPES[this.typeId];\r\n    this.color = COLORS[this.typeId];\r\n\r\n    // set starting position\r\n    this.setStartingPosition();\r\n    this.y = 0;\r\n  }\r\n  draw() {\r\n    this.ctx.fillStyle = this.color;\r\n    this.shape.forEach((row, y) => {\r\n      row.forEach((value, x) => {\r\n        // x, y: shape 2차원 배열내에서 1의 값을 가진 원소의 인덱스\r\n        // this.x, this.y : grid 내의 블록 위치\r\n        if (value > 0) {\r\n          // 원소 값이 1이면, 색을 채워서 블록 모양이 표시되도록함. (SHAPES 상수 참조)\r\n          this.ctx.fillRect(this.x + x, this.y + y, 1, 1);\r\n        }\r\n      });\r\n    });\r\n  }\r\n  move(p) {\r\n    this.x = p.x;\r\n    this.y = p.y;\r\n    this.shape = p.shape;\r\n  }\r\n  randomizeTetrominoType(noOfTypes) {\r\n    return Math.floor(Math.random() * noOfTypes + 1);\r\n  }\r\n  setStartingPosition() {\r\n    this.x = this.typeId === 4 ? 4 : 3;\r\n  }\r\n}\r\n"],"sourceRoot":""}